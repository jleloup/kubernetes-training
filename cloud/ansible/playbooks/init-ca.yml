---
- hosts: "localhost"
  name: Initialize CA
  gather_facts: false

  tasks:
    - name: Generate root CA certificate & key
      shell: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
      args:
        chdir: files/
        creates: ca.pem

    - name: Generate admin CA certificate & key
      shell: |
        cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes \
        admin-csr.json | cfssljson -bare admin
      args:
        chdir: files/
        creates: admin.pem

    - name: Generate Kube Controller manager certificate & key
      shell: |
        cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes \
        kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
      args:
        chdir: files/
        creates: kube-controller-manager.pem

    - name: Generate Kube Proxy certificate & key
      shell: |
        cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes \
        kube-proxy-csr.json | cfssljson -bare kube-proxy
      args:
        chdir: files/
        creates: kube-proxy.pem

    - name: Generate Kube Scheduler certificate & key
      shell: |
        cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes \
        kube-scheduler-csr.json | cfssljson -bare kube-scheduler
      args:
        chdir: files/
        creates: kube-scheduler.pem

    - name: Generate Service account certificate & key
      shell: |
        cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes \
        service-account-csr.json| cfssljson -bare service-account
      args:
        chdir: files/
        creates: service-account.pem

    - name: Handle Kubernetes API server certificate
      block:
        - name: Fetch EIP
          ec2_eip_info:
            filters:
              tag:cka: "true"
              tag:owner: "{{ owner }}"
          register: apiserver_ip

        - name: Generate API server certificate & key
          vars:
            apiserver_hostnames: "{{ kubernetes_hostnames + [apiserver_ip.addresses.0.public_ip] }}"
          shell: |
            cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config=ca-config.json \
            -hostname="{{ apiserver_hostnames | join(',') }}" \
            -profile=kubernetes \
            kubernetes-csr.json | cfssljson -bare kubernetes
          args:
            chdir: files/
            creates: kubernetes.pem

    - name: Handle Kubelet certificates
      block:
        - name: Fetch workers
          ec2_instance_info:
            filters:
              tag:cka: "true"
              tag:owner: "{{ owner }}"
              tag:type: "worker"
          register: workers_vm

        - name: Debug
          debug: var=workers_vm.instances.0.tags.Name
